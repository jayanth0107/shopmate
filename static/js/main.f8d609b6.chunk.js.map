{"version":3,"sources":["apis/backendApi.js","actions/types.js","actions/index.js","components/AuthHelperMethods.js","components/NewTopBar.js","components/ShopMateHeader.js","components/Footer.js","components/navigation/ShoppingCart.js","components/navigation/ShippingAddress.js","components/CheckoutForm.js","components/navigation/StripePayment.js","components/Categories.js","components/ModalManager.js","components/ProductList.js","components/Pagination.js","components/ContentPage.js","components/RouterPage.js","components/SearchBar.js","components/Departments.js","components/App.js","reducers/index.js","reducers/departmentsReducer.js","reducers/categoriesReducer.js","reducers/productsReducer.js","reducers/searchReducer.js","reducers/modalReducer.js","reducers/attributesReducer.js","reducers/reviewsReducer.js","reducers/shoppingCartReducer.js","reducers/cartTotalReducer.js","index.js"],"names":["axios","create","baseURL","MODAL_CLOSE","selectCategory","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","backendApi","get","sent","type","payload","data","rows","stop","_x2","apply","this","arguments","selectProduct","pageNo","_ref4","_callee4","_context4","concat","departmentId","cateogryId","_x4","selectProductFromDepartment","id","_ref5","_callee5","_context5","_x5","selectProductFromCategory","_ref6","_callee6","_context6","_x6","searchProduct","searchTerm","_selectAttributes","_","memoize","_ref7","_callee7","_context7","_x7","_x8","_selectReviews","_ref8","_callee8","_context8","_x9","_x10","openModal","modalProps","cartTotal","IncDecOperator","qty","addToCart","cart","AuthHelperMethods","register","_callee","username","email","password","config","res","_context","headers","Content-Type","post","then","catch","error","abrupt","Promise","resolve","login","loggedIn","token","_this","getToken","console","log","setToken","idToken","localStorage","setItem","getItem","logout","removeItem","fetch","url","options","Accept","objectSpread","_checkStatus","json","status","Error","statusText","NewTopBar","state","_this2","props","warn","react_default","createElement","className","react_router_dom","to","style","bottom","cursor","onClick","fromNewBar","React","Component","ShopMateHeader","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Auth","handleInputChange","event","_event$target","target","value","name","setState","defineProperty","onSubmit","preventDefault","toString","match","document","getElementById","innerHTML","fontSize","color","fontWeight","close","userLogIn","accessToken","display","err","alert","registerMessage","e","open","openRegister","bind","assertThisInitialized","closeRegister","components_NewTopBar","marginLeft","total","length","Modal","onClose","Content","Grid","textAlign","height","verticalAlign","Column","maxWidth","Header","as","Form","size","Segment","stacked","Input","fluid","onChange","icon","iconPosition","placeholder","required","Label","basic","Button","Message","href","connect","cartItems","Footer","paddingTop","ShoppingCart","tableData","map","cartItem","index","key","product_id","discounted_price","decrement","quantity","increment","subtotal_price","Number","toFixed","incrementQuantity","decrementQuantity","removeFromCart","emptyCart","removeAllItemsFromCart","placeOrder","creatOrder","cart_id","shipping_id","tax_id","user-key","totalPrice","sumBy","s","ShippingAddress","htmlFor","maxLength","tabIndex","CheckoutForm","handleSubmit","ev","stripe","createToken","complete","submit","method","body","ok","elementFontSize","window","innerWidth","react_stripe_elements_es","base","letterSpacing","fontFamily","::placeholder","padding","invalid","injectStripe","StripePayment","addEventListener","apiKey","components_CheckoutForm","Categories","onCategoryClick","category_id","siblings","sibling","currentTarget","parentNode","firstChild","nodeType","push","nextSibling","categories","category","ModalManager","_Component","addItemToCart","userColorSelected","userSizeSelected","getElementsByClassName","resultObject","addColorToCart","addSizeToCart","configureModal","defaultProps","_this$props","attributes","reviews","img","thumbnail","imgF","replace","selectAttributes","colors","filter","Sizes","attribute_value","Colors","backgroundColor","selectReviews","Reviews","review","alt","src","created_on","num","toConsumableArray","Array","keys","generateStars","rating","assign","image","lib_default","width","position","top","flexDirection","price","description","Icon","react_rating_default","emptySymbol","fullSymbol","start","step","initialRating","Actions","primary","closeModal","inherits","createClass","renderedComponent","modalConfiguration","defaultOpen","closeIcon","_modalConfiguration$m","modals","ProductList","depId","catId","isOpen","product","searchingFor","x","toLowerCase","includes","search","products","finalProductList","undefined","textDecorationLine","textDecorationStyle","textDecorationColor","pre","Date","getTime","renderList","components_ModalManager","productCount","count","Pagination","onPageClick","categoryId","term","pageCount","Math","ceil","pages","i","PagesRemain","page","ContentPage","components_Pagination","components_Categories","components_ProductList","RouterPage","react_router","exact","path","component","SearchBar","onSearchHandler","Departments","pageInfo","onDepartmentClick","department_id","selectCategoryFromDepartment","selectDepartment","departments","department","components_SearchBar","_ref","_x","_ref3","_callee3","_context3","_x3","App","_React$Component","components_ShopMateHeader","components_Departments","components_RouterPage","components_Footer","combineReducers","form","formReducer","action","partition1","partition2","find","pi","reject","item","isEqual","productIndex","findIndex","prodIndex","slice","round","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","components_App","querySelector"],"mappings":"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","file":"static/js/main.f8d609b6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://backendapi.turing.com/'\r\n});","export const SIGN_IN = 'SIGN_IN'\r\nexport const SIGN_OUT = 'SIGN_OUT'\r\nexport const SELECTED_CATEGORY = 'SELECTED_CATEGORY'\r\nexport const SELECTED_DEPARTMENT = 'SELECTED_DEPARTMENT'\r\nexport const SELECTED_PRODUCT = 'SELECTED_PRODUCT'\r\nexport const SELECTED_CATEGORY_FROM_DEPARTMENT = 'SELECTED_CATEGORY_FROM_DEPARTMENT'\r\nexport const SEARCH = 'SEARCH'\r\nexport const MODAL_OPEN = \"MODAL_OPEN\";\r\nexport const MODAL_CLOSE = \"MODAL_CLOSE\";\r\nexport const SELECTED_ATTRIBUTE = 'SELECTED_ATTRIBUTE'\r\nexport const SELECTED_REVIEW = 'SELECTED_REVIEW'\r\nexport const SHOPPING_CART = 'SHOPPING_CART'\r\nexport const CART_TOTAL_COUNT = 'CART_TOTAL_COUNT'\r\nexport const ADD = 'ADD'\r\nexport const REMOVE = 'REMOVE'\r\nexport const REMOVEALL = 'REMOVEALL'\r\nexport const INCREMENTQTY = 'INCREMENTQTY'\r\nexport const DECREMENTQTY = 'DECREMENTQTY'","import backendApi from '../apis/backendApi';\r\nimport _ from 'lodash';\r\nimport { SELECTED_CATEGORY , SELECTED_DEPARTMENT, SELECTED_PRODUCT, SEARCH, MODAL_OPEN, MODAL_CLOSE, \r\n            SELECTED_ATTRIBUTE, SELECTED_REVIEW, ADD, REMOVE, REMOVEALL, INCREMENTQTY, DECREMENTQTY, CART_TOTAL_COUNT} from './types';\r\n\r\nexport const selectDepartment = () =>  async dispatch => {\r\n    const response = await backendApi.get('/departments');\r\n\r\n    dispatch( {type: SELECTED_DEPARTMENT, payload: response.data });\r\n};\r\n\r\nexport const selectCategory = () => async dispatch => {\r\n    const response = await backendApi.get('/categories');\r\n        \r\n    dispatch({type: SELECTED_CATEGORY, payload: response.data.rows });   \r\n};\r\n\r\nexport const selectCategoryFromDepartment = id => async dispatch => {\r\n    const response = await backendApi.get(`/categories/inDepartment/${id}`);\r\n\r\n    dispatch({type: SELECTED_CATEGORY, payload: response.data});\r\n};\r\n\r\nexport const selectProduct = pageNo => async dispatch => {\r\n    const response = await backendApi.get(`/products?page=${pageNo}`);\r\n    \r\n    dispatch({type: SELECTED_PRODUCT, payload: response.data, departmentId: '', cateogryId: '' });   \r\n};\r\n\r\nexport const selectProductFromDepartment = (id, pageNo) => async dispatch => {\r\n    const response = await backendApi.get(`/products/inDepartment/${id}?page=${pageNo}`);\r\n\r\n    dispatch({type: SELECTED_PRODUCT, payload: response.data, departmentId:`${id}`, cateogryId: '' });\r\n};\r\n\r\nexport const selectProductFromCategory = (id, pageNo) => async dispatch => {\r\n    const response = await backendApi.get(`/products/inCategory/${id}?page=${pageNo}`);\r\n\r\n    dispatch({type: SELECTED_PRODUCT, payload: response.data, departmentId: '', cateogryId: `${id}`});\r\n};\r\n\r\nexport const searchProduct = (searchTerm) => {\r\n    \r\n    return {type: SEARCH,  searchTerm: searchTerm };\r\n};\r\n\r\nexport const selectAttributes = id => dispatch => _selectAttributes(id, dispatch);\r\n      const _selectAttributes = _.memoize(async (id, dispatch) => {\r\n      const response = await backendApi.get(`/attributes/inProduct/${id}`);\r\n\r\n      dispatch({type: SELECTED_ATTRIBUTE,  payload: response.data });\r\n});\r\n\r\nexport const selectReviews = id => dispatch => _selectReviews(id, dispatch);\r\n    const _selectReviews = _.memoize(async (id, dispatch) => {\r\n    const response = await backendApi.get(`/products/${id}/reviews`);\r\n\r\n    dispatch({type: SELECTED_REVIEW, payload: response.data});\r\n});\r\n\r\nexport const openModal = (modalProps) => {\r\n    return {\r\n      type: MODAL_OPEN,\r\n      payload: modalProps\r\n    };\r\n};\r\n  \r\nexport function closeModal() {\r\n    return {\r\n      type: MODAL_CLOSE \r\n    };\r\n};\r\n\r\nexport const cartTotal = (IncDecOperator, qty) => {\r\n    return {type: CART_TOTAL_COUNT, payload: IncDecOperator, qty: qty}\r\n}\r\n\r\nexport const addToCart = (cart) => {\r\n    return {type: ADD, payload: cart};\r\n};\r\n\r\nexport const removeFromCart = (cart) => {\r\n    return {type: REMOVE, payload: cart};\r\n};\r\n\r\nexport const removeAllItemsFromCart = (cart) => {\r\n    return {type: REMOVEALL, payload: cart};\r\n};\r\n\r\nexport const incrementQuantity = (cart) => {\r\n    return {type: INCREMENTQTY, payload: cart};\r\n};\r\n\r\nexport const decrementQuantity = (cart) => {\r\n    return {type: DECREMENTQTY, payload: cart};\r\n};","import backendApi from '../apis/backendApi';\r\n\r\nexport default class AuthHelperMethods {    \r\n    \r\n    // User registration\r\n\r\n    register = async (username, email, password) => {\r\n        \r\n        // Get a token from api server using the post api\r\n        const data = \"name=\"+username+\"&email=\"+email+\"&password=\"+password;\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n        const res = await backendApi.post(`/customers`,data, config).then(response => {\r\n            return response.data;\r\n          }).catch(error => {\r\n            return error;\r\n          });\r\n        \r\n        return Promise.resolve(res);      \r\n    }\r\n\r\n    // User authentication\r\n\r\n    login = async (email, password) => {\r\n        \r\n        // Get a token from api server using the post api\r\n        const data = \"email=\"+email+\"&password=\"+password;\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n        const response = await backendApi.post(`/customers/login`,data, config).then(response => {\r\n            return response.data;\r\n          }).catch(error => {\r\n            return error;\r\n          });\r\n        \r\n        return Promise.resolve(response);      \r\n    }\r\n\r\n    loggedIn = () => {\r\n        const token = this.getToken() // Getting token from localstorage\r\n        console.log('Token from local storage', token);\r\n        return !!token  // handwaiving here , can check for Token expiry\r\n    }\r\n\r\n    // Storing tokens\r\n    \r\n    setToken = (idToken) => {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('id_token', idToken)\r\n        console.log('Token set in local Storage');\r\n    }\r\n\r\n    getToken = () => {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('id_token')\r\n    }\r\n\r\n    logout = () => {\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem('id_token');\r\n        console.log('Token removed from local Storage');\r\n    }\r\n\r\n    \r\n    fetch = (url, options) => {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n        // Setting Authorization header\r\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        }\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        })\r\n            .then(this._checkStatus)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    _checkStatus = (response) => {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\r\n            return response\r\n        } else {\r\n            var error = new Error(response.statusText)\r\n            error.response = response\r\n            throw error\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../css/NewTopBar.css';\r\n\r\nclass NewTopBar extends React.Component {\r\n\r\n        state = {};\r\n\r\n        render() {\r\n        \r\n          if(this.props.warn === \"false\") {\r\n            return null;\r\n          }           \r\n          \r\n          /* ITEMS TO SHOW WHEN USER LOGS IN*/\r\n          return (  \r\n          \r\n              <div id='userMenu' className=\"ui secondary pointing menu\">\r\n                  <div className={`headerText`}>Welcome!  </div>\r\n                  <pre>   </pre>\r\n                  <div className={`ui item userNameLogged`}>\r\n                          {this.props.username}   \r\n                  </div>              \r\n                  <div className=\"ui horizontal item list\">                  \r\n                      <Link to=\"/shoppingCart\" className=\"item\"> <div className=\"item\"><i className=\"shopping bag icon\"></i>My Bag </div> </Link>\r\n                        \r\n                      <Link to=\"/shippingAddress\" className=\"item\"> <div className=\"item\"><i className=\"user outline icon\"></i>My Profile </div> </Link>\r\n                          \r\n                      <div className=\"item\" style={{bottom: '22px', cursor: 'pointer'}} onClick={() => this.props.fromNewBar(\"false\")}><i className=\"sign-out alternate icon\"></i>Logout </div> \r\n                  </div>            \r\n              \r\n              </div>    \r\n          )\r\n      }\r\n}\r\n\r\nexport default NewTopBar;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { addToCart, cartTotal } from '../actions';\r\nimport { Button,  Form,  Grid,  Header,  Message,  Segment,  Modal, Label} from \"semantic-ui-react\";\r\n\r\nimport '../css/ShopMateHeader.css';\r\n\r\n/* We want to import our 'AuthHelperMethods' component in order to send a login request */\r\nimport AuthHelperMethods from './AuthHelperMethods';\r\n\r\nimport NewTopBar from './NewTopBar';\r\n\r\nclass ShopMateHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { open: false, name: '', email : '', password: '', openRegister: false, userLogIn: \"false\" };\r\n    this.open = this.open.bind(this);\r\n    this.openRegister = this.openRegister.bind(this);\r\n    this.close = this.close.bind(this);\r\n    this.closeRegister = this.closeRegister.bind(this);\r\n  }\r\n\r\n  /* In order to utilize our authentication methods within the AuthService class, we want to instantiate a new object */\r\n  Auth = new AuthHelperMethods();\r\n\r\n  openRegister() {\r\n    this.setState({ openRegister: true });\r\n  }\r\n\r\n  closeRegister() {\r\n    this.setState({ openRegister: false });\r\n  }\r\n\r\n  open() {\r\n    this.setState({ open: true });\r\n  }\r\n\r\n  close() {\r\n    this.setState({ open: false });\r\n  }  \r\n\r\n\r\n  /* Fired off every time the use enters something into the input fields */\r\n  handleInputChange = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  onSubmit = (event) => { \r\n    event.preventDefault();\r\n    /* Upon clicking the login button, we will send our entered credentials over to the server for verification. \r\n       Once verified, store our token and send the protected route. */\r\n        this.Auth.login(this.state.email, this.state.password)\r\n            .then(response => { \r\n            if(response.toString().match(/Error/)) {\r\n              document.getElementById('loginLabel').innerHTML = 'Email or Password is invalid. !!';\r\n              document.getElementById('loginLabel').style.fontSize = '100%';\r\n            } else {\r\n                document.getElementById('loginLabel').innerHTML = 'Login Successful';\r\n                document.getElementById('loginLabel').style.color = \"green !important\";\r\n                document.getElementById('loginLabel').style.fontWeight = 'bold';\r\n                document.getElementById('loginLabel').style.fontSize = '150%';\r\n                 this.close();\r\n                 this.setState({userLogIn: \"true\"})\r\n                 this.Auth.loggedIn();\r\n                 this.Auth.setToken(response.accessToken);\r\n                 document.getElementById('topLeftMenu').style.display = 'none';\r\n            }\r\n        })\r\n        .catch(err => {\r\n                alert(err);\r\n            })\r\n    }\r\n\r\n    registerMessage = () => {\r\n        this.Auth.register(this.state.name, this.state.email, this.state.password)\r\n        .then(res => { console.log(' *** Registration Msg ****',res);\r\n            if(res.toString().match(/Error/)) {\r\n                document.getElementById('greenLabel').innerHTML = 'Registration Unsuccessful !!';\r\n                document.getElementById('greenLabel').style.fontSize = '100%';\r\n            } else {\r\n                document.getElementById('greenLabel').innerHTML = 'Registration Successful';\r\n                document.getElementById('greenLabel').style.color = \"green !important\";\r\n                document.getElementById('greenLabel').style.fontWeight = 'bold';\r\n                document.getElementById('greenLabel').style.fontSize = '150%';\r\n            }\r\n        })\r\n        .catch(err => {\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n    fromNewBar = (e) => {\r\n        this.Auth.logout();\r\n        this.setState({userLogIn: e.toString()});\r\n        document.getElementById('topLeftMenu').style.display = 'block';\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div id='topHeaderDiv'> \r\n\r\n          <div id='guestBar'>                  \r\n                  <div id='guestMenu' className=\"ui secondary pointing menu\">\r\n                          <NewTopBar warn={this.state.userLogIn} username={this.state.email} fromNewBar = {this.fromNewBar}/>\r\n                          <div id='topLeftMenu' className='guestLeftMenu' >\r\n                              <span className={`headerText`}>Hi!  </span>\r\n                              <button to=\"/\" className={`item signIn`} onClick={this.open}>  Sign In  </button>\r\n                              <span className={`headerText`}>or  </span>\r\n                              <button to=\"/\" className={`item register`} onClick={this.openRegister}>  Register  </button>\r\n                          </div>                          \r\n      \r\n                                      {/* Right Menu of Header Bar */}\r\n                          <div className=\"right menu\">\r\n                            <Link to=\"/shoppingCart\" className=\"item\">\r\n                              <i className={`shopping bag icon big headerIcon`}/>\r\n                              <span className={`floating ui red label cartNumber`} style={{marginLeft: '8% !important'}}>\r\n                                {this.props.total.length}\r\n                              </span>              \r\n                              <div className={`bagText`}>Your Bag</div>  \r\n                            </Link> \r\n                          </div>\r\n                  </div>   \r\n          </div>        \r\n\r\n                        {/* Sign in Modal */}\r\n          <Modal open={this.state.open} onClose={this.close}>\r\n            <Modal.Content>\r\n              <div className=\"login-form\">\r\n                <Grid textAlign=\"center\" style={{ height: \"100%\" }} verticalAlign=\"middle\">\r\n                  <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n                      Sign in\r\n                    </Header>\r\n                    <Form size=\"large\" onSubmit={this.onSubmit}>\r\n                      <Segment stacked>\r\n                        <Form.Input fluid value={this.state.email} onChange={this.handleInputChange} icon=\"user\" iconPosition=\"left\" placeholder=\"E-mail\" type=\"email\" name=\"email\" required/>\r\n                        <Form.Input fluid value={this.state.password} onChange={this.handleInputChange} icon=\"lock\" iconPosition=\"left\" placeholder=\"Password\" type=\"password\" name=\"password\" required/>\r\n                        <Label id='loginLabel' basic color='red'></Label>\r\n                        <Button color=\"teal\" fluid size=\"large\">\r\n                          Login\r\n                        </Button>\r\n                      </Segment>\r\n                    </Form>\r\n                    <Message>\r\n                        New to us? <button href=\"#\" onClick={this.openRegister}>Register</button>\r\n                    </Message>\r\n                  </Grid.Column>\r\n                </Grid>\r\n              </div>\r\n            </Modal.Content>\r\n          </Modal>\r\n\r\n                       {/* Register Modal */}\r\n          <Modal open={this.state.openRegister} onClose={this.closeRegister}>\r\n            <Modal.Content>\r\n              <div className=\"registration-form\">\r\n                <Grid textAlign=\"center\" style={{ height: \"100%\" }} verticalAlign=\"middle\">\r\n                  <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n                      Register\r\n                    </Header>\r\n                    <Form size=\"large\" onSubmit={this.registerMessage}>\r\n                      <Segment stacked>\r\n                        <Form.Input fluid value={this.state.name} onChange={this.handleInputChange} icon=\"user\" iconPosition=\"left\" placeholder=\"Name\" type=\"text\" name=\"name\" required/>\r\n                        <Form.Input fluid value={this.state.email} onChange={this.handleInputChange} icon=\"mail\" iconPosition=\"left\" placeholder=\"E-mail\" type=\"email\" name=\"email\" required/>\r\n                        <Form.Input fluid value={this.state.password} onChange={this.handleInputChange} icon=\"lock\" iconPosition=\"left\" placeholder=\"Password\" type=\"password\" name=\"password\" required/>\r\n                        <Label id='greenLabel' basic color='red'></Label>\r\n                        <Button color=\"teal\" fluid size=\"large\">\r\n                           Register\r\n                        </Button>\r\n                      </Segment>\r\n                    </Form>\r\n                    <Message>\r\n                        Already have an account <button href=\"#\" onClick={this.open}>Sign In</button>\r\n                    </Message>\r\n                  </Grid.Column>\r\n                </Grid>\r\n              </div>\r\n            </Modal.Content>\r\n          </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return  {cartItems: state.cart, total: state.cartTotal};   \r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { addToCart, cartTotal })(ShopMateHeader);\r\n","import React from 'react';\r\nimport '../css/Footer.css';\r\n\r\nconst Footer = () => {\r\n\r\n    return (          \r\n            <div className={`ui segment pointing footerBar`} >\r\n                <i className={`big circular inverted instagram icon iconFooter`}></i>\r\n                <i className={`big circular inverted pinterest icon iconFooter`}></i>\r\n                <i className={`big circular inverted twitter icon iconFooter`}></i>\r\n                <i className={`big circular inverted facebook icon iconFooter`}></i>\r\n\r\n                <div className={`footerDiv`}>                    \r\n                    <span className={`footerSpan`}><i className='circular copyright outline icon'></i>2019 Shopmated Ltd</span>\r\n                    <span className={`footerSpan`} style={{paddingTop: '4px'}}>Contact  </span>\r\n                    <span className={`footerSpan`} style={{paddingTop: '4px'}}>Privacy Policy </span>\r\n                </div>\r\n            </div> \r\n       \r\n     );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { addToCart, removeFromCart, removeAllItemsFromCart, incrementQuantity, decrementQuantity, cartTotal } from '../../actions';\r\n\r\nimport '../../css/ShoppingCart.css';\r\nimport _ from 'lodash';\r\nimport backendApi from '../../apis/backendApi';\r\nimport AuthHelperMethods from '../AuthHelperMethods';\r\n\r\nclass ShoppingCart extends React.Component {\r\n\r\n    Auth = new AuthHelperMethods();\r\n\r\n    tableData = (cartItems) => {\r\n        return (    cartItems.map((cartItem,index) =>\r\n                        <tr key={cartItem.product_id}>\r\n                            <td><button key={'rem'+index} className={`ui labeled icon button cartRemoveButton`}  onClick={(event) => this.removeItem(cartItem)}>\r\n                                    <i key={'close'+index} className=\"close icon\"></i>\r\n                                        Remove\r\n                                </button></td>    \r\n                            <td key={'n'+index}>{cartItem.name}</td>\r\n                            <td>Color: {cartItem.color}, Size: {cartItem.size}</td>\r\n                            <td key={'p'+index}>{cartItem.discounted_price}</td>\r\n                            <td><button className={`ui icon button decCart`} key={'dec'+index} onClick={(event) => this.decrement(cartItem)}><i key={'min'+index} className=\"minus icon\"></i></button>\r\n                                <span className={`qtySpan`}>{cartItem.quantity}</span>\r\n                                <button className={`ui icon button incCart`} key={'inc'+index} onClick={(event) => this.increment(cartItem)}><i key={'plus'+index} className=\"plus icon\"></i></button>\r\n                            </td>\r\n                            <td key={'st'+index}>{cartItem.subtotal_price? Number(cartItem.subtotal_price).toFixed(2) : Number(cartItem.quantity*cartItem.discounted_price).toFixed(2)}</td>\r\n                        </tr>\r\n                        )               \r\n                )\r\n    }\r\n\r\n    increment = (cartItem) => {\r\n\r\n        this.props.cartTotal(1,1);\r\n        this.props.incrementQuantity(cartItem);  \r\n    }\r\n  \r\n      decrement = (cartItem) => {\r\n          \r\n        if(cartItem.quantity > 0) {           \r\n            this.props.cartTotal(-1,1);\r\n            this.props.decrementQuantity(cartItem);\r\n        }\r\n      }\r\n  \r\n      removeItem = (cartItem) => {\r\n\r\n        this.props.cartTotal(-1, cartItem.quantity);\r\n        this.props.removeFromCart(cartItem);\r\n      }\r\n  \r\n      emptyCart = () => {\r\n        this.props.cartTotal(0,1); \r\n        this.props.removeAllItemsFromCart();\r\n      }\r\n\r\n      placeOrder = (event) => {\r\n            event.preventDefault();\r\n            this.creatOrder(10,10,1).then(res => { console.log(' *** Created Order ****',res);\r\n                            if(res.toString().match(/Error/)) {\r\n                                alert('Access unauthorized');\r\n                            } else {\r\n                            \r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            alert(err);\r\n                        });\r\n      }\r\n\r\n      creatOrder = async (cart_id, shipping_id, tax_id) => {\r\n        \r\n        // Get a token from api server using the post api\r\n        const data = \"cart_id=\"+cart_id+\"&shipping_id=\"+shipping_id+\"&tax_id=\"+1;\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded',\r\n              'user-key': this.Auth.getToken()\r\n            }\r\n        }\r\n        console.log(config);\r\n        const res = await backendApi.post(`/orders`,data, config).then(response => {\r\n            return response.data;\r\n          }).catch(error => {\r\n            return error;\r\n          });\r\n        \r\n        return Promise.resolve(res);      \r\n    }\r\n\r\n    render() {\r\n        const {cartItems} = this.props;\r\n        const totalPrice = _.sumBy(cartItems, function(s) {\r\n            return s.discounted_price*s.quantity\r\n        });\r\n\r\n        return (\r\n            <div className={`mainCartDiv`}>\r\n                <div className={`cartTopDiv`}>\r\n                    <button className={`ui left floated button cartButton`} onClick={this.emptyCart}>EMPTY CART</button>\r\n                    <label className={`totalLabel`}>Total: {Number(totalPrice).toFixed(2)}</label>\r\n                                          \r\n                        <Link to=\"/shippingAddress\" className=\"item\">\r\n                            <button className={`ui right floated button orderButton`}> PLACE ORDER </button> \r\n                        </Link>\r\n                                    \r\n                </div>    \r\n                <table className={`ui striped table cartTable`}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Name</th>\r\n                            <th>Attributes</th>\r\n                            <th>Price</th>\r\n                            <th>Quantity</th>\r\n                            <th>Subtotal</th>\r\n                        </tr>\r\n                    </thead>   \r\n\r\n                    <tbody>                        \r\n                            {this.tableData(cartItems)}                        \r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>         \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return  {cartItems: state.cart};\r\n     \r\n}\r\n\r\nexport default connect(mapStateToProps, { addToCart, removeFromCart, removeAllItemsFromCart, incrementQuantity, decrementQuantity, cartTotal })(ShoppingCart);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport '../../css/ShippingAddress.css'\r\n\r\nconst ShippingAddress = () => {\r\n    return (\r\n        <div className={`mainShippingDiv`}>\r\n            <form className=\"ui form\">\r\n                <h4 className={`ui dividing header shippingHeader`}>Shipping Information</h4>\r\n                <div className=\"field\">\r\n                    <label>Name</label>\r\n                    <div className=\"two fields\">\r\n                        <div className=\"field\">\r\n                            <input type=\"text\" name=\"shipping[first-name]\" placeholder=\"First Name\"/>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <input type=\"text\" name=\"shipping[last-name]\" placeholder=\"Last Name\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Billing Address</label>\r\n                    <div className=\"fields\">\r\n                        <div className=\"twelve wide field\">\r\n                            <input type=\"text\" name=\"shipping[address]\" placeholder=\"Street Address\"/>\r\n                        </div>\r\n                        <div className=\"four wide field\">\r\n                            <input type=\"text\" name=\"shipping[address-2]\" placeholder=\"Plot #\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"two fields\">\r\n                <div className=\"field\">\r\n                <label>State</label>\r\n                <select className=\"ui fluid dropdown\">\r\n                    <option value=\"\">State</option>\r\n                    <option value=\"TS\">Telangana</option>\r\n                    <option value=\"CA\">California</option>\r\n                    <option value=\"FL\">Florida</option>\r\n                    <option value=\"NY\">New York</option>                    \r\n                    <option value=\"WA\">France</option>\r\n                    \r\n                </select>\r\n                </div>\r\n                <div className=\"field\">\r\n                <label>Country</label>\r\n                    <select className=\"ui fluid dropdown\">\r\n                        <option value=\"\">Select Country</option>\r\n                        <option value=\"IN\">India</option>\r\n                        <option value=\"US\">United States</option>\r\n                        <option value=\"DE\">Germany</option>\r\n                    </select>\r\n                \r\n    </div>\r\n  </div>\r\n  <h4 className={`ui dividing header shippingHeader`}>Billing Information</h4>\r\n        <div className=\"field\">         \r\n\r\n            <select className=\"ui fluid dropdown\">\r\n                    <option value=\"\">Card Type</option>\r\n                <option value=\"AL\">Visa</option>\r\n                <option value=\"AK\">American Express</option>\r\n                <option value=\"AZ\">Discover</option>\r\n            </select>\r\n        </div>\r\n        <div className=\"fields\">\r\n            <div className=\"seven wide field\">\r\n            <label htmlFor=\"card-element\">Card Number</label>\r\n            <input type=\"text\" name=\"card[number]\" maxLength=\"16\" placeholder=\"Card #\"/>\r\n            </div>\r\n            <div className=\"three wide field\">\r\n            <label>CVC</label>\r\n            <input type=\"text\" name=\"card[cvc]\" maxLength=\"3\" placeholder=\"CVC\"/>\r\n            </div>\r\n            <div className=\"six wide field\">\r\n            <label>Expiration</label>\r\n            <div className=\"two fields\">\r\n                <div className=\"field\">\r\n                <select className=\"ui fluid search dropdown\" name=\"card[expire-month]\">\r\n                    <option value=\"\">Month</option>\r\n                    <option value=\"1\">January</option>\r\n                    <option value=\"2\">February</option>\r\n                    <option value=\"3\">March</option>\r\n                    <option value=\"4\">April</option>\r\n                    <option value=\"5\">May</option>\r\n                    <option value=\"6\">June</option>\r\n                    <option value=\"7\">July</option>\r\n                    <option value=\"8\">August</option>\r\n                    <option value=\"9\">September</option>\r\n                    <option value=\"10\">October</option>\r\n                    <option value=\"11\">November</option>\r\n                    <option value=\"12\">December</option>\r\n                </select>\r\n                </div>\r\n                <div className=\"field\">\r\n                <input type=\"text\" name=\"card[expire-year]\" maxLength=\"4\" placeholder=\"Year\"/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>        \r\n   \r\n   \r\n        <Link to=\"/billingAddress\" className=\"item\">\r\n            <div className={`ui button shippingSubmit`} tabIndex=\"0\">Submit Order</div>\r\n        </Link>\r\n                        \r\n                        \r\n\r\n\r\n\r\n            </form>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default ShippingAddress;","import React, {Component} from 'react';\r\nimport {CardElement, injectStripe} from 'react-stripe-elements';\r\n\r\nconst createOptions = (fontSize, padding) => {\r\n    return {\r\n      style: {\r\n        base: {\r\n          fontSize,\r\n          color: '#424770',\r\n          letterSpacing: '0.025em',\r\n          fontFamily: 'Source Code Pro, monospace',\r\n          '::placeholder': {\r\n            color: '#aab7c4',\r\n          },\r\n          padding,\r\n        },\r\n        invalid: {\r\n          color: '#9e2146',\r\n        },\r\n      },\r\n    };\r\n  };\r\n\r\nclass CheckoutForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {complete: false};\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  async submit(ev) {\r\n    // User clicked submit\r\n    let {token} = await this.props.stripe.createToken({name: \"Name\"});\r\n    let response = await fetch(\"/charge\", {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        body: token.id\r\n    });\r\n\r\n    if (response.ok) {\r\n        console.log(\"Purchase Complete!\");\r\n        this.setState({complete: true, elementFontSize: window.innerWidth < 450 ? '14px' : '18px'})\r\n    }\r\n  }\r\n\r\n  handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    if (this.props.stripe) {\r\n      this.props.stripe\r\n        .createToken()\r\n        .then((payload) => console.log('[token]', payload));\r\n    } else {\r\n      console.log(\"Stripe.js hasn't loaded yet.\");\r\n    }\r\n  }; \r\n\r\n\r\n  render() {\r\n    if (this.state.complete) return <h1>Purchase Complete</h1>;\r\n    return (\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n                <p>Would you like to complete the purchase?</p>\r\n                <label>\r\n                Card details\r\n                <CardElement\r\n                    {...createOptions(this.props.fontSize)}\r\n                />\r\n                </label>\r\n                <button >Pay</button>\r\n            </div>\r\n         </form>\r\n        \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectStripe(CheckoutForm);","import React from 'react';\r\nimport {Elements, StripeProvider} from 'react-stripe-elements';\r\nimport CheckoutForm from '../CheckoutForm';\r\n\r\nimport '../../css/StripePayment.css'\r\n\r\n\r\nclass StripePayment extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          elementFontSize: window.innerWidth < 450 ? '14px' : '18px',\r\n        };\r\n        window.addEventListener('resize', () => {\r\n          if (window.innerWidth < 450 && this.state.elementFontSize !== '14px') {\r\n            this.setState({elementFontSize: '14px'});\r\n          } else if (\r\n            window.innerWidth >= 450 &&\r\n            this.state.elementFontSize !== '18px'\r\n          ) {\r\n            this.setState({elementFontSize: '18px'});\r\n          }\r\n        });\r\n      }\r\n\r\n\r\n    render() {\r\n\r\n        const {elementFontSize} = this.state;\r\n    \r\n        return (\r\n            <StripeProvider apiKey=\"pk_test_nOzdmMn0pCPON26PXM0jBlNA00zSoTLhSP\">\r\n            \r\n                <div className={`mainBillingDiv`}>\r\n                    \r\n                    <h1>Stripe Payment</h1>\r\n                    <Elements>\r\n                        <CheckoutForm fontSize={elementFontSize}/>\r\n                    </Elements>\r\n                </div>            \r\n            \r\n            \r\n            </StripeProvider>\r\n            \r\n        )\r\n    } \r\n}\r\n\r\nexport default StripePayment;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectCategory, selectProductFromCategory } from '../actions';\r\nimport '../css/Categories.css';\r\n\r\nclass Categories extends React.Component {\r\n    state = {};   \r\n\r\n        /* On component mount fire api call and load with categories */\r\n    componentDidMount(){        \r\n        this.props.selectCategory();\r\n    }\r\n\r\n        /* Logic to maintain focus on the clicked Category element */ \r\n    onCategoryClick = (event, category_id) => {\r\n        var siblings = [];\r\n        var sibling = event.currentTarget.parentNode.firstChild;\r\n        while (sibling) {\r\n            if (sibling.nodeType === 1) {\r\n                siblings.push(sibling);\r\n            }\r\n            \r\n            sibling.className = 'item';\r\n            sibling = sibling.nextSibling;\r\n        }\r\n        this.props.selectProductFromCategory(category_id,1);\r\n        event.currentTarget.className = 'item active';\r\n    }\r\n\r\n    render(){  \r\n        return (\r\n            this.props.categories.map(category => {\r\n                return(\r\n                    <li className=\"item\" key={category.category_id} onClick = {(event) => this.onCategoryClick(event, category.category_id)}>\r\n                            {category.name}\r\n                    </li> \r\n                )\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {   \r\n    return {categories: state.categories};\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectCategory, selectProductFromCategory })(Categories);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Header, Icon,  Modal } from \"semantic-ui-react\";\r\n\r\nimport { closeModal, selectAttributes, selectReviews, addToCart, cartTotal } from \"../actions\";\r\nimport Image from 'react-image-resizer';\r\nimport _ from 'lodash';\r\n\r\nimport '../css/ModalManager.css';\r\nimport Rating from 'react-rating';\r\n\r\nexport class ModalManager extends Component {\r\n\r\n  constructor(props) {    \r\n    super(props)\r\n    this.state = { props: {} };\r\n  }\r\n\r\n  addItemToCart = (modalProps) => {\r\n    let userColorSelected = '';\r\n    let userSizeSelected = '';\r\n\r\n    if(document.getElementsByClassName('selectedColorDot').length === 0 || document.getElementsByClassName('selectedSizeButton').length === 0 )\r\n        alert('Please choose Color and Size for the Product');\r\n    else{\r\n\r\n      if(document.getElementsByClassName('selectedColorDot').length > 0)\r\n          userColorSelected = document.getElementsByClassName('selectedColorDot')[0].value;\r\n      if(document.getElementsByClassName('selectedSizeButton').length > 0)\r\n          userSizeSelected = document.getElementsByClassName('selectedSizeButton')[0].value;\r\n\r\n      let resultObject = {...modalProps, color: userColorSelected, size: userSizeSelected, quantity:1};\r\n      this.props.addToCart(resultObject);\r\n      this.props.cartTotal(1,1);\r\n    }\r\n\r\n  }\r\n\r\n  addColorToCart = (event) => {\r\n    \r\n    let siblings = [];\r\n    var sibling = event.currentTarget.parentNode.firstChild;\r\n        while (sibling) {\r\n            if (sibling.nodeType === 1) {\r\n                siblings.push(sibling);\r\n            }\r\n            \r\n            sibling.className = 'colorDot';\r\n            sibling = sibling.nextSibling;\r\n          }\r\n\r\n    event.currentTarget.className = 'selectedColorDot';  \r\n  }\r\n\r\n  addSizeToCart = (event) => {\r\n    \r\n    let siblings = [];\r\n    var sibling = event.currentTarget.parentNode.firstChild;\r\n        while (sibling) {\r\n            if (sibling.nodeType === 1) {\r\n                siblings.push(sibling);\r\n            }\r\n            \r\n            sibling.className = 'sizeButton';\r\n            sibling = sibling.nextSibling;\r\n          }\r\n\r\n    event.currentTarget.className = 'selectedSizeButton';\r\n\r\n  }\r\n\r\n/* Configurable Modal to hold all product information, color, size and review information of the products */\r\n  configureModal = (modalProps,defaultProps) => {\r\n\r\n      const { attributes, reviews} = this.props;\r\n      const generateStars = (num) => {\r\n        const a = [...Array(num).keys()];        \r\n        return (\r\n        <span>{a.map((num,index) => { return <i key={index} className={`fa fa-star starColor`}></i> } )} </span>)\r\n      }      \r\n\r\n      const img = 'https://backendapi.turing.com/images/products/' + modalProps.thumbnail;\r\n      const imgF = 'https://raw.githubusercontent.com/zandoan/turing-frontend/master/Images/product_images/' + modalProps.thumbnail.replace('-thumbnail','-2');\r\n     \r\n      this.props.selectAttributes(modalProps.product_id);\r\n      const colors = _.filter(this.props.attributes,['attribute_name', 'Color']); \r\n      const sizes = _.filter(attributes,['attribute_name', 'Size']);\r\n      \r\n      const Sizes = sizes.map((size,index) =>                                           \r\n      <button className={`ui circular label sizeButton`} key={'size'+index} value={size.attribute_value} \r\n              onClick={(event) => this.addSizeToCart(event, modalProps, size.attribute_value)}>{size.attribute_value}</button>) \r\n\r\n      const Colors = colors.map((color) =>                                           \r\n      <button className = {`colorDot`} key={color.attribute_value}         \r\n              style={{backgroundColor: color.attribute_value}} \r\n              value={color.attribute_value} \r\n              onClick={(event) => this.addColorToCart(event, modalProps, color.attribute_value)}></button>)  \r\n\r\n      this.props.selectReviews(modalProps.product_id);\r\n      const Reviews = reviews.map((review, index) =>\r\n      \r\n        <div className=\"comment\" key={'review'+index}>\r\n            <button className=\"avatar\">\r\n              <img alt=\"avatar\" src=\"https://img.icons8.com/material-rounded/50/000000/user.png\"/>\r\n            </button>\r\n            <div className=\"content\">\r\n              <div className=\"author\" key={review.name}>{review.name}</div>\r\n              <div className=\"metadata\">\r\n                <span className=\"date\" key={review.created_on}>{review.created_on}</span> \r\n              </div>\r\n              <div key={review.review} className=\"text\">\r\n                {review.review}\r\n              </div>\r\n              <div key={'star'+index}>                \r\n                {generateStars(review.rating)}\r\n              </div>              \r\n            </div>\r\n        </div>)\r\n\r\n    return (\r\n    <Modal size='small' {...Object.assign({}, modalProps, defaultProps)}>\r\n      <Modal.Content image>                                    \r\n        <div className={`imageDivModal`}>                                        \r\n            <Image src={img} height=\"200\" width=\"200\"> </Image>  \r\n            <Image alt=\"orgImage\" height=\"200\" width=\"200\" src={imgF} style={{position: 'relative', top: '200px'}}> </Image>  \r\n        </div>\r\n        \r\n        <div className={`headerDivModal`} >                                    \r\n            <Header as='h1'>{modalProps.name}</Header>\r\n\r\n            <div className={`priceDivModal`} style={{display:'flex', flexDirection:'row'}}>\r\n                <span className={`priceModal`}>  ${modalProps.price}   </span>\r\n                <span className={`discountedPriceModal`}>  ${modalProps.discounted_price} </span>\r\n            </div>\r\n\r\n            <p className={`descriptionModal`}>{modalProps.description}</p>\r\n\r\n            <span className={`sizeColorTextModal`}>Size </span>\r\n                <div className={`sizeContainer`}>{Sizes}</div>\r\n\r\n            <br /><span className={`sizeColorTextModal`}>Color </span>\r\n            <div className={`colorContainer`}>{Colors} </div>\r\n\r\n            <br />\r\n                <button className={`ui right floated button cartButton`} onClick={() => this.addItemToCart(modalProps)}>\r\n                    Add to Cart <Icon name='right chevron' />\r\n                </button>           \r\n\r\n            <br /><br /><span style={{fontWeight: 'bold', fontSize: '18px'}}>Leave Review </span>\r\n            \r\n            <form className=\"ui reply form\">\r\n                <div className=\"field\">\r\n                  <textarea></textarea>\r\n                </div>\r\n                <div>\r\n                  <button className={`ui blue labeled submit icon button cartButton`} onClick={(e) => e.preventDefault()}>\r\n                    <i className=\"icon edit\"></i> Leave Review \r\n                  </button>\r\n                  <Rating emptySymbol=\"fa fa-star-o fa-2x\" style={{color:'#f30965'}}\r\n                          fullSymbol=\"fa fa-star fa-2x\" start={0} step={1} initialRating={1} />\r\n                </div>\r\n                \r\n            </form>\r\n\r\n            <br /><span style={{fontWeight: 'bold%', fontSize: '18px'}}>Reviews </span>\r\n            <div className=\"ui comments\">\r\n                {Reviews}\r\n            </div>                              \r\n        \r\n        </div>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button primary onClick={this.props.closeModal}>\r\n            Close \r\n        </Button>\r\n      </Modal.Actions>\r\n\r\n    </Modal>)\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { modalConfiguration} = this.props;\r\n    const defaultProps = {\r\n      defaultOpen: true,\r\n      closeIcon: true,\r\n      onClose: this.props.closeModal\r\n    };\r\n\r\n    let renderedComponent;\r\n    if (modalConfiguration) {\r\n      const { modalProps = {} } = modalConfiguration;        \r\n      renderedComponent = this.configureModal(modalProps, defaultProps);\r\n    }\r\n\r\n    return <span>{renderedComponent}</span>;\r\n  }\r\n  \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { modalConfiguration: state.modals, attributes: state.attributes, reviews: state.reviews };\r\n}\r\n\r\nexport default connect(mapStateToProps, { closeModal, selectAttributes, selectReviews, addToCart, cartTotal })(ModalManager);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectProduct, selectProductFromCategory, selectProductFromDepartment, searchProduct, openModal } from '../actions';\r\nimport '../css/ProductList.css';\r\nimport ModalManager from './ModalManager';\r\n\r\nclass ProductList extends React.Component {\r\n    state = {data:[], depId:'', catId:'',isOpen: false}; \r\n\r\n    constructor(props){\r\n        super(props);        \r\n        this.searchingFor = this.searchingFor.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.selectProduct(1); // 1 is the first page in the product api       \r\n    } \r\n\r\n    /* Returns the products name and description information based on the user search term    */\r\n    searchingFor(searchTerm){\r\n        return function(x){\r\n            return x.name.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n                    x.description.toLowerCase().includes(searchTerm.toLowerCase()) || !searchTerm;\r\n        }\r\n    }\r\n\r\n    /* Open Modal with the selected product card info  */\r\n    openModal = (product) => {\r\n        this.props.openModal({\r\n            name: product.name, \r\n            description: product.description,\r\n            price: product.price,\r\n            discounted_price: product.discounted_price,\r\n            thumbnail: product.thumbnail, \r\n            id: product.product_id\r\n        })\r\n    }\r\n\r\n    /* Returns list of product cards to be displayed on the screen*/ \r\n    renderList(){ \r\n\r\n      const {search,products} = this.props;\r\n      let  finalProductList = [];\r\n\r\n      if(this.props.products !== undefined) {\r\n\r\n        if( search && search.length > 0) {\r\n           const searchTerm =  search[search.length-1].searchTerm;\r\n            finalProductList = products.filter(this.searchingFor(searchTerm));\r\n        } else {\r\n            finalProductList = this.props.products;\r\n        }\r\n        \r\n        return finalProductList.map(product => { \r\n            return(  \r\n                <div key={product.product_id} className={`ui card productCard`} \r\n                            onClick = {() => this.props.openModal(product)}>                                               \r\n                    <div className=\"image\">\r\n                        <img className={`productImage`} alt={product.name} src={'https://backendapi.turing.com/images/products/' + product.thumbnail}/>\r\n                    </div>  \r\n                    <div className=\"content\">\r\n                        <div className={`center aligned header productName`}>{product.name}</div>                 \r\n                        <div className={`ui tag labels priceDiv`}>\r\n                            <button className={`ui left large floated label priceTag`} style={{textDecorationLine: 'line-through', textDecorationStyle: 'solid', textDecorationColor: 'black'}}>${product.price}</button>\r\n                            <button className={`ui right large floated label discountPriceTag`}>${product.discounted_price}</button>\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            {product.description}\r\n                        </div> \r\n                    </div>\r\n                </div>             \r\n            )\r\n        })\r\n      }\r\n    }\r\n\r\n    render(){\r\n        /* Generate keys and pass as attributes to avoid warnings from React */\r\n        const generateKey = (pre) => {\r\n            return `${ pre }_${ new Date().getTime() }`;\r\n          }\r\n\r\n        return (\r\n            \r\n            <div key={generateKey()} className={`ui cards cardList`}>                    \r\n                    {this.renderList()} \r\n                <ModalManager />                                   \r\n            </div>\r\n                              \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return  {products: state.products.data.rows, productCount: state.products.data.count, search: state.search};\r\n     \r\n}\r\n\r\nexport default connect(mapStateToProps, { selectProduct, selectProductFromCategory, selectProductFromDepartment, searchProduct, openModal })(ProductList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../css/Pagination.css';\r\nimport { selectProduct, selectProductFromCategory, selectProductFromDepartment, selectCategory } from '../actions';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.searchingFor = this.searchingFor.bind(this);\r\n    }\r\n    \r\n    // Returns the products name and description information based on the user search term\r\n    searchingFor(term){\r\n        return function(x){\r\n            return x.name.toLowerCase().includes(term.toLowerCase()) || !term;\r\n        }\r\n    }    \r\n\r\n    /* Load the desired products from category and department based on the selected page number */\r\n    onPageClick = (event, pageNo) => { \r\n\r\n        var siblings = [];\r\n        var sibling = event.currentTarget.parentNode.firstChild;\r\n        while (sibling) {\r\n            if (sibling.nodeType === 1) {\r\n                siblings.push(sibling);\r\n            }\r\n            \r\n            sibling.className = 'item';\r\n            sibling = sibling.nextSibling;\r\n        }\r\n\r\n        if(this.props.departmentId.length === 0 && this.props.categoryId.length === 0 ) {\r\n            this.props.selectProduct(pageNo);\r\n            event.currentTarget.className = 'item active';  \r\n        }\r\n\r\n        else if(this.props.departmentId.length > 0) {\r\n            this.props.selectProductFromDepartment(this.props.departmentId, pageNo);\r\n            event.currentTarget.className = 'item active'; \r\n        }\r\n\r\n        else if(this.props.categoryId.length > 0) {\r\n            this.props.selectProductFromCategory(this.props.categoryId, pageNo);\r\n            event.currentTarget.className = 'item active'; \r\n        }\r\n\r\n    }\r\n\r\n    render(){ \r\n\r\n        const {search,products} = this.props;\r\n        let  finalProductList = [];\r\n\r\n        const noOfProductsPerPage = 20;  // 20 product cards per page as default view\r\n        let pageCount;\r\n\r\n        /* Have to load page nos dynamically based on search term component */\r\n        if(search){\r\n            pageCount = Math.ceil(this.props.count / noOfProductsPerPage);            \r\n        }       \r\n        else if(search[search.length-1].searchTerm> 0) {\r\n               const searchTerm =\r\n               search[search.length - 1].searchTerm;\r\n              \r\n               finalProductList = products.filter(\r\n                 this.searchingFor(searchTerm)\r\n               );\r\n               \r\n               pageCount = Math.ceil(\r\n                 finalProductList.length / noOfProductsPerPage\r\n               );\r\n        } \r\n\r\n        /* Have to maintain focus on the first page on load and returns page nos dynamically*/\r\n        \r\n        let pages = [];\r\n        for(let i=2 ; i<= pageCount; i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        const PagesRemain = pages.map((page, index) =>                 \r\n                    \r\n                        <li key={index} className='item' onClick = {(event) => this.onPageClick(event,page)}>\r\n                                    {page}\r\n                        </li>                       \r\n                );\r\n\r\n        if(this.props.count < 20) {\r\n            return (\r\n                <li className='item active' onClick = {(event) => this.onPageClick(event,1)}>  1 </li>                 \r\n            )\r\n        } else {\r\n            return (\r\n                <div className={`pageNoStart`}>\r\n                    <li className='item active' onClick = {(event) => this.onPageClick(event,1)}>  1 </li>  \r\n                    {PagesRemain}\r\n                </div>\r\n            )            \r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { count: state.products.data.count, \r\n             departmentId: state.products.departmentId,\r\n             categoryId: state.products.categoryId,\r\n             products: state.products.data.rows,\r\n             search:state.search\r\n     };\r\n}\r\n\r\nexport default connect(mapStateToProps, {selectProduct, selectProductFromCategory, selectProductFromDepartment, selectCategory })(Pagination);\r\n","import React from 'react';\r\n\r\nimport Categories from './Categories';\r\nimport ProductList from './ProductList';\r\nimport Pagination from './Pagination';\r\n\r\nimport '../css/ContentPage.css';\r\n\r\n/* Content Page component contains middle portion of the page (Categories sidebar, Pagination and Product List components) */\r\n\r\nconst ContentPage = () => {\r\n    return (\r\n                <div>                                             \r\n                    \r\n                    <div className={`ui pagination menu pageDiv`}>\r\n                        <div className={`categoryText`}>Categories</div >\r\n                            <div className={`pageStart`}>\r\n                                <Pagination />\r\n                            </div>                                             \r\n                    </div>                   \r\n\r\n                    <div className=\"ui grid\">\r\n                        <div className=\"two wide column\">\r\n                            <div className={`ui secondary vertical menu leftSideBar`}>\r\n                                  <Categories /> \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"fourteen wide stretched column\">\r\n                            <div className={`listHeight`}>\r\n                                  <ProductList />  \r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n\r\n                </div>                    \r\n    \r\n        )         \r\n}\r\n\r\nexport default ContentPage;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport ShoppingCart from './navigation/ShoppingCart';\r\nimport ShippingAddress from './navigation/ShippingAddress';\r\nimport StripePayment from './navigation/StripePayment';\r\nimport ContentPage from './ContentPage';\r\n\r\nimport '../css/ShopMateHeader.css';\r\n\r\nconst RouterPage = () => (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path='/' component={ContentPage}/>\r\n        <Route path='/shoppingCart' component={ShoppingCart}/>\r\n        <Route path='/shippingAddress' component={ShippingAddress}/>\r\n        <Route path='/billingAddress' component={StripePayment}/>\r\n      </Switch>\r\n    </main>\r\n )\r\n  \r\n export default RouterPage;","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchProduct, selectProduct } from '../actions';\r\n\r\nclass SearchBar extends React.Component { \r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.onSearchHandler = this.onSearchHandler.bind(this);\r\n     }\r\n    \r\n    onSearchHandler = (event) => {\r\n        let term = event.target.value;   \r\n        this.props.searchProduct(term); \r\n    }\r\n\r\n    render(){    \r\n\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"ui icon input\">\r\n                    <input type=\"text\" placeholder=\"Search Anything ...\" onChange={this.onSearchHandler}/>\r\n                        <i className=\"search link icon\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {searchProduct, selectProduct})(SearchBar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectDepartment, selectCategoryFromDepartment, selectProductFromDepartment } from '../actions';\r\nimport '../css/Departments.css';\r\nimport SearchBar from './SearchBar';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Departments extends React.Component {\r\n    state = {data:'',pageInfo:''}; ; \r\n\r\n        /* On component mount fire api call and load with departments */\r\n    componentDidMount(){\r\n        this.props.selectDepartment();\r\n    }\r\n\r\n       /* Invoke actions to load Content Page component with Categories and Products based on the Department id clicked*/ \r\n    onDepartmentClick = (department_id) => {\r\n        this.props.selectCategoryFromDepartment(department_id);   \r\n        this.props.selectProductFromDepartment(department_id,1);\r\n    }\r\n\r\n    renderList(){\r\n        return this.props.departments.map(department => {\r\n            return(            \r\n                <li key={department.department_id} className={`ui pointing item departmentName`} onClick = {() => this.onDepartmentClick(department.department_id)}>\r\n                    {department.name} \r\n                </li>           \r\n            )\r\n        })\r\n    }\r\n\r\n    /* Returns logo text, departments bar and Search bar components*/ \r\n    render(){  \r\n        return (\r\n            <div className={`ui pointing menu departmentBar`} >\r\n                <Link to=\"/\" >\r\n                    <div className={`ui label logo`}>\r\n                        <h1 className={`logoText`}>SHOPMATE</h1>\r\n                    </div>\r\n                </Link>\r\n                <span className={`departmentText`}>\r\n                    {this.renderList()}\r\n                </span>\r\n                <div className=\"right menu\">\r\n                    <SearchBar />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { departments: state.departments };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectDepartment, selectCategoryFromDepartment, selectProductFromDepartment })(Departments);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport '../css/App.css';\r\n\r\nimport Header from './ShopMateHeader';\r\nimport Footer from './Footer';\r\nimport ContentPage from './RouterPage';\r\nimport Departments from './Departments';\r\n\r\nimport { openModal } from \"../actions\";\r\n\r\n/* App.js contains all the components that are displayed in the page */\r\nexport class App extends React.Component {\r\n    \r\n    render() {\r\n        \r\n        return (        \r\n                    <div className={`appdiv ui container`}>\r\n                            \r\n                        <div>\r\n                            <Header /> \r\n\r\n                            <Departments /> \r\n\r\n                            <ContentPage/> \r\n\r\n                            <Footer />                      \r\n                        </div>                  \r\n                    </div>      \r\n        );\r\n    }\r\n   \r\n};\r\n\r\n\r\nexport default connect(null, { openModal })(App);\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport departmentReducer from './departmentsReducer';\r\nimport categoryReducer from './categoriesReducer';\r\nimport productReducer from './productsReducer';\r\nimport searchReducer from './searchReducer';\r\nimport modalReducer from './modalReducer';\r\nimport attributeReducer from './attributesReducer';\r\nimport reviewReducer from './reviewsReducer';\r\nimport shoppingCartReducer from './shoppingCartReducer';\r\nimport cartTotalReducer from './cartTotalReducer';\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    departments: departmentReducer,\r\n    categories: categoryReducer,\r\n    products: productReducer,\r\n    search: searchReducer,\r\n    modals: modalReducer,\r\n    attributes: attributeReducer,\r\n    reviews: reviewReducer,\r\n    cart: shoppingCartReducer,\r\n    cartTotal: cartTotalReducer\r\n});","export default (state = [], action) => {\r\n\r\n    switch(action.type) {\r\n        case 'SELECTED_DEPARTMENT':\r\n                return action.payload;  \r\n        default:\r\n                return state;\r\n    }\r\n        \r\n};","export default (state = [], action) => {\r\n\r\n    switch(action.type) {\r\n        case 'SELECTED_CATEGORY':\r\n                return action.payload;  \r\n        default:\r\n                return state;\r\n    }\r\n        \r\n};","export default (state = {data:[], depId:'', catId:''}, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'SELECTED_PRODUCT':\r\n                return {\r\n                    data: action.payload, \r\n                    departmentId: action.departmentId,\r\n                    categoryId: action.cateogryId,\r\n                };  \r\n        default:\r\n                return state;\r\n    }\r\n        \r\n};","export default (state = [], action) => {\r\n    \r\n    switch(action.type) { \r\n        case 'SEARCH':        \r\n                return [\r\n                    ...state, \r\n                    {searchTerm: action.searchTerm}                   \r\n                ];             \r\n        default:\r\n                return state;\r\n    }\r\n        \r\n};\r\n\r\n","const defaultState = null;\r\n\r\nexport default (state = defaultState, action = {}) => {\r\n  switch (action.type) {\r\n    case \"MODAL_OPEN\": {\r\n      return { modalProps: action.payload };\r\n    }\r\n\r\n    case \"MODAL_CLOSE\": {\r\n      return null;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","export default (state = [], action) => {\r\n\r\n    switch(action.type) {\r\n        case 'SELECTED_ATTRIBUTE':\r\n                return action.payload;  \r\n        default:\r\n                return state;\r\n    }\r\n        \r\n};","export default (state = [], action) => {\r\n\r\n    switch(action.type) {\r\n        case 'SELECTED_REVIEW':\r\n                return action.payload;  \r\n        default:\r\n                return state;\r\n    }\r\n        \r\n};","import _ from 'lodash';\r\n\r\nexport default (state = [], action) => { \r\n    \r\n    switch(action.type) { \r\n            case 'ADD':\r\n\r\n                let partition1, partition2;\r\n                if(state.length > 0) {  \r\n\r\n                        let r = _.find(state, pi => pi.name === action.payload.name && pi.color === action.payload.color && pi.size === action.payload.size)\r\n\r\n                        if(r){\r\n                            // find the location of identical state obj and separate other entries\r\n                            partition1 = _.reject(state, {'name':action.payload.name, 'color':action.payload.color , 'size' : action.payload.size});                            \r\n\r\n                            // update the qty for separated object\r\n                            partition2 = _.filter(state, {'name':action.payload.name, 'color':action.payload.color , 'size' : action.payload.size});                            \r\n                            partition2[0].quantity = ++partition2[0].quantity;\r\n                           \r\n                            // return state\r\n                            return [...partition1, partition2[0]];                            \r\n                        }\r\n                        \r\n                }\r\n\r\n                return [...state, action.payload];  \r\n\r\n            case 'REMOVE':\r\n                  const pList = state.filter(item => !_.isEqual(item,action.payload));\r\n                  return pList;\r\n\r\n            case 'REMOVEALL':\r\n                \r\n                return [];\r\n  \r\n            case 'INCREMENTQTY':\r\n                let productIndex = state.findIndex(product => _.isEqual(product,action.payload));\r\n                \r\n                const productList = state.map((product,index) => {\r\n                    if(index === productIndex) {\r\n                      product.quantity +=1;\r\n                      product.subtotal_price = product.quantity*product.discounted_price;\r\n                      product.subtotal_price = Number(product.subtotal_price).toFixed(2);\r\n                    }\r\n                    return product;\r\n                });\r\n  \r\n                return productList;\r\n  \r\n            case 'DECREMENTQTY':\r\n                let prodIndex = state.findIndex(product => _.isEqual(product,action.payload));\r\n                \r\n                const prodList = state.map((product,index) => {\r\n                    if(index === prodIndex) {\r\n                      product.quantity -=1;\r\n                      if(product.subtotal_price && product.quantity > 1){\r\n                         product.subtotal_price = product.subtotal_price - product.discounted_price;  \r\n                         product.subtotal_price = Number(product.subtotal_price).toFixed(2);                       \r\n                      } else if(product.quantity === 1 && product.subtotal_price) {\r\n                          product.discounted_price = product.subtotal_price - product.discounted_price;\r\n                          product.subtotal_price = product.discounted_price;\r\n                      } else if(product.quantity === 0) {\r\n                          product.subtotal_price = 0.00;\r\n                      }\r\n                      else {\r\n                         product.subtotal_price = Number(product.quantity*product.discounted_price).toFixed(2);                         \r\n                      }\r\n                    }\r\n                    return product;\r\n                });\r\n                return prodList;\r\n\r\n            default:\r\n                return state;\r\n    }\r\n        \r\n};\r\n\r\n\r\n","\r\nexport default (state = [], action = {}) => {\r\n  switch (action.type) {\r\n    case \"CART_TOTAL_COUNT\": { \r\n        if(action.payload === 0) \r\n           return [];\r\n        else if(action.payload === -1)\r\n           return state.slice(Math.round(action.qty));\r\n        else\r\n          return [...state,  action.payload];\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport rootReducer from './reducers';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    rootReducer, composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render( \r\n   \r\n        <Provider store={store}>\r\n            <BrowserRouter> \r\n                <App />\r\n            </BrowserRouter>\r\n        </Provider>\r\n    , \r\n    document.querySelector('#root')\r\n);\r\n\r\nexport default createStore(rootReducer);"],"sourceRoot":""}